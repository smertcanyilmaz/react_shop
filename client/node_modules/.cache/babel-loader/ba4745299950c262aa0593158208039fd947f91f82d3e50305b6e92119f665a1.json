{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport cartReducer from \"./cartReducer\";\nexport const store = configureStore({\n  reducer: {\n    cart: cartReducer\n  }\n});\n\n// import { configureStore } from \"@reduxjs/toolkit\";\n// import {\n//   persistStore,\n//   persistReducer,\n//   FLUSH,\n//   REHYDRATE,\n//   PAUSE,\n//   PERSIST,\n//   PURGE,\n//   REGISTER,\n// } from \"redux-persist\";\n// import storage from \"redux-persist/lib/storage\";\n// import cartReducer from \"./cartReducer\";\n// import favoritesReducer from \"./favoritesReducer\";\n// import menuReducer from \"./menuReducer\";\n\n// const persistConfig = {\n//   key: \"root\",\n//   version: 1,\n//   storage,\n// };\n// const stripe = require(\"stripe\")(process.env.STRİPE_KEY);\n\n// const persistedReducer = persistReducer(persistConfig, cartReducer);\n// const persistedFavoritesReducer = persistReducer(\n//   persistConfig,\n//   favoritesReducer\n// );\n// const persistedMenuReducer = persistReducer(persistConfig, menuReducer);\n\n// export const store = configureStore({\n//   reducer: {\n//     cart: persistedReducer,\n//     favorites: persistedFavoritesReducer,\n//     menu: persistedMenuReducer,\n//   },\n//   middleware: (getDefaultMiddleware) =>\n//     getDefaultMiddleware({\n//       serializableCheck: {\n//         ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//       },\n//     }),\n// });\n\n// export let persistor = persistStore(store);","map":{"version":3,"names":["configureStore","cartReducer","store","reducer","cart"],"sources":["C:/Users/Smert/OneDrive/Masaüstü/react_shop/client/src/redux/store.jsx"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport cartReducer from \"./cartReducer\";\r\n\r\nexport const store = configureStore({\r\n  reducer: { cart: cartReducer },\r\n});\r\n\r\n// import { configureStore } from \"@reduxjs/toolkit\";\r\n// import {\r\n//   persistStore,\r\n//   persistReducer,\r\n//   FLUSH,\r\n//   REHYDRATE,\r\n//   PAUSE,\r\n//   PERSIST,\r\n//   PURGE,\r\n//   REGISTER,\r\n// } from \"redux-persist\";\r\n// import storage from \"redux-persist/lib/storage\";\r\n// import cartReducer from \"./cartReducer\";\r\n// import favoritesReducer from \"./favoritesReducer\";\r\n// import menuReducer from \"./menuReducer\";\r\n\r\n// const persistConfig = {\r\n//   key: \"root\",\r\n//   version: 1,\r\n//   storage,\r\n// };\r\n// const stripe = require(\"stripe\")(process.env.STRİPE_KEY);\r\n\r\n// const persistedReducer = persistReducer(persistConfig, cartReducer);\r\n// const persistedFavoritesReducer = persistReducer(\r\n//   persistConfig,\r\n//   favoritesReducer\r\n// );\r\n// const persistedMenuReducer = persistReducer(persistConfig, menuReducer);\r\n\r\n// export const store = configureStore({\r\n//   reducer: {\r\n//     cart: persistedReducer,\r\n//     favorites: persistedFavoritesReducer,\r\n//     menu: persistedMenuReducer,\r\n//   },\r\n//   middleware: (getDefaultMiddleware) =>\r\n//     getDefaultMiddleware({\r\n//       serializableCheck: {\r\n//         ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n//       },\r\n//     }),\r\n// });\r\n\r\n// export let persistor = persistStore(store);\r\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,WAAW,MAAM,eAAe;AAEvC,OAAO,MAAMC,KAAK,GAAGF,cAAc,CAAC;EAClCG,OAAO,EAAE;IAAEC,IAAI,EAAEH;EAAY;AAC/B,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}