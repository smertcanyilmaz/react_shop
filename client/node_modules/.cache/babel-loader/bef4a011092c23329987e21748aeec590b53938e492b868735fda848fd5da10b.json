{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:/Users/Smert/OneDrive/Masa\\xFCst\\xFC/react_shop/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/Smert/OneDrive/Masa\\xFCst\\xFC/react_shop/client/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _classCallCheck = require(\"C:/Users/Smert/OneDrive/Masa\\xFCst\\xFC/react_shop/client/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/Smert/OneDrive/Masa\\xFCst\\xFC/react_shop/client/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"C:/Users/Smert/OneDrive/Masa\\xFCst\\xFC/react_shop/client/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/Smert/OneDrive/Masa\\xFCst\\xFC/react_shop/client/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SubtleCryptoProvider = void 0;\nvar CryptoProvider_js_1 = require(\"./CryptoProvider.js\");\n/**\n * `CryptoProvider which uses the SubtleCrypto interface of the Web Crypto API.\n *\n * This only supports asynchronous operations.\n */\nvar SubtleCryptoProvider = /*#__PURE__*/function (_CryptoProvider_js_1$) {\n  _inherits(SubtleCryptoProvider, _CryptoProvider_js_1$);\n  var _super = _createSuper(SubtleCryptoProvider);\n  function SubtleCryptoProvider(subtleCrypto) {\n    var _this;\n    _classCallCheck(this, SubtleCryptoProvider);\n    _this = _super.call(this);\n    // If no subtle crypto is interface, default to the global namespace. This\n    // is to allow custom interfaces (eg. using the Node webcrypto interface in\n    // tests).\n    _this.subtleCrypto = subtleCrypto || crypto.subtle;\n    return _this;\n  }\n  /** @override */\n  _createClass(SubtleCryptoProvider, [{\n    key: \"computeHMACSignature\",\n    value: function computeHMACSignature(payload, secret) {\n      throw new CryptoProvider_js_1.CryptoProviderOnlySupportsAsyncError('SubtleCryptoProvider cannot be used in a synchronous context.');\n    }\n    /** @override */\n  }, {\n    key: \"computeHMACSignatureAsync\",\n    value: function () {\n      var _computeHMACSignatureAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(payload, secret) {\n        var encoder, key, signatureBuffer, signatureBytes, signatureHexCodes, i;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              encoder = new TextEncoder();\n              _context.next = 3;\n              return this.subtleCrypto.importKey('raw', encoder.encode(secret), {\n                name: 'HMAC',\n                hash: {\n                  name: 'SHA-256'\n                }\n              }, false, ['sign']);\n            case 3:\n              key = _context.sent;\n              _context.next = 6;\n              return this.subtleCrypto.sign('hmac', key, encoder.encode(payload));\n            case 6:\n              signatureBuffer = _context.sent;\n              // crypto.subtle returns the signature in base64 format. This must be\n              // encoded in hex to match the CryptoProvider contract. We map each byte in\n              // the buffer to its corresponding hex octet and then combine into a string.\n              signatureBytes = new Uint8Array(signatureBuffer);\n              signatureHexCodes = new Array(signatureBytes.length);\n              for (i = 0; i < signatureBytes.length; i++) {\n                signatureHexCodes[i] = byteHexMapping[signatureBytes[i]];\n              }\n              return _context.abrupt(\"return\", signatureHexCodes.join(''));\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function computeHMACSignatureAsync(_x, _x2) {\n        return _computeHMACSignatureAsync.apply(this, arguments);\n      }\n      return computeHMACSignatureAsync;\n    }()\n  }]);\n  return SubtleCryptoProvider;\n}(CryptoProvider_js_1.CryptoProvider);\nexports.SubtleCryptoProvider = SubtleCryptoProvider;\n// Cached mapping of byte to hex representation. We do this once to avoid re-\n// computing every time we need to convert the result of a signature to hex.\nvar byteHexMapping = new Array(256);\nfor (var i = 0; i < byteHexMapping.length; i++) {\n  byteHexMapping[i] = i.toString(16).padStart(2, '0');\n}","map":{"version":3,"names":["_regeneratorRuntime","require","default","_asyncToGenerator","_classCallCheck","_createClass","_inherits","_createSuper","Object","defineProperty","exports","value","SubtleCryptoProvider","CryptoProvider_js_1","_CryptoProvider_js_1$","_super","subtleCrypto","_this","call","crypto","subtle","key","computeHMACSignature","payload","secret","CryptoProviderOnlySupportsAsyncError","_computeHMACSignatureAsync","mark","_callee","encoder","signatureBuffer","signatureBytes","signatureHexCodes","i","wrap","_callee$","_context","prev","next","TextEncoder","importKey","encode","name","hash","sent","sign","Uint8Array","Array","length","byteHexMapping","abrupt","join","stop","computeHMACSignatureAsync","_x","_x2","apply","arguments","CryptoProvider","toString","padStart"],"sources":["C:/Users/Smert/OneDrive/Masaüstü/react_shop/client/node_modules/stripe/cjs/crypto/SubtleCryptoProvider.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SubtleCryptoProvider = void 0;\nconst CryptoProvider_js_1 = require(\"./CryptoProvider.js\");\n/**\n * `CryptoProvider which uses the SubtleCrypto interface of the Web Crypto API.\n *\n * This only supports asynchronous operations.\n */\nclass SubtleCryptoProvider extends CryptoProvider_js_1.CryptoProvider {\n    constructor(subtleCrypto) {\n        super();\n        // If no subtle crypto is interface, default to the global namespace. This\n        // is to allow custom interfaces (eg. using the Node webcrypto interface in\n        // tests).\n        this.subtleCrypto = subtleCrypto || crypto.subtle;\n    }\n    /** @override */\n    computeHMACSignature(payload, secret) {\n        throw new CryptoProvider_js_1.CryptoProviderOnlySupportsAsyncError('SubtleCryptoProvider cannot be used in a synchronous context.');\n    }\n    /** @override */\n    async computeHMACSignatureAsync(payload, secret) {\n        const encoder = new TextEncoder();\n        const key = await this.subtleCrypto.importKey('raw', encoder.encode(secret), {\n            name: 'HMAC',\n            hash: { name: 'SHA-256' },\n        }, false, ['sign']);\n        const signatureBuffer = await this.subtleCrypto.sign('hmac', key, encoder.encode(payload));\n        // crypto.subtle returns the signature in base64 format. This must be\n        // encoded in hex to match the CryptoProvider contract. We map each byte in\n        // the buffer to its corresponding hex octet and then combine into a string.\n        const signatureBytes = new Uint8Array(signatureBuffer);\n        const signatureHexCodes = new Array(signatureBytes.length);\n        for (let i = 0; i < signatureBytes.length; i++) {\n            signatureHexCodes[i] = byteHexMapping[signatureBytes[i]];\n        }\n        return signatureHexCodes.join('');\n    }\n}\nexports.SubtleCryptoProvider = SubtleCryptoProvider;\n// Cached mapping of byte to hex representation. We do this once to avoid re-\n// computing every time we need to convert the result of a signature to hex.\nconst byteHexMapping = new Array(256);\nfor (let i = 0; i < byteHexMapping.length; i++) {\n    byteHexMapping[i] = i.toString(16).padStart(2, '0');\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}