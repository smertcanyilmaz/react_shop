{"ast":null,"code":"\"use strict\";\n\nvar _inherits = require(\"C:/Users/Smert/OneDrive/Masa\\xFCst\\xFC/react_shop/client/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/Smert/OneDrive/Masa\\xFCst\\xFC/react_shop/client/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _wrapNativeSuper = require(\"C:/Users/Smert/OneDrive/Masa\\xFCst\\xFC/react_shop/client/node_modules/@babel/runtime/helpers/wrapNativeSuper.js\").default;\nvar _classCallCheck = require(\"C:/Users/Smert/OneDrive/Masa\\xFCst\\xFC/react_shop/client/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/Smert/OneDrive/Masa\\xFCst\\xFC/react_shop/client/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CryptoProviderOnlySupportsAsyncError = exports.CryptoProvider = void 0;\n/**\n * Interface encapsulating the various crypto computations used by the library,\n * allowing pluggable underlying crypto implementations.\n */\nvar CryptoProvider = /*#__PURE__*/function () {\n  function CryptoProvider() {\n    _classCallCheck(this, CryptoProvider);\n  }\n  _createClass(CryptoProvider, [{\n    key: \"computeHMACSignature\",\n    value:\n    /**\n     * Computes a SHA-256 HMAC given a secret and a payload (encoded in UTF-8).\n     * The output HMAC should be encoded in hexadecimal.\n     *\n     * Sample values for implementations:\n     * - computeHMACSignature('', 'test_secret') => 'f7f9bd47fb987337b5796fdc1fdb9ba221d0d5396814bfcaf9521f43fd8927fd'\n     * - computeHMACSignature('\\ud83d\\ude00', 'test_secret') => '837da296d05c4fe31f61d5d7ead035099d9585a5bcde87de952012a78f0b0c43\n     */\n    function computeHMACSignature(payload, secret) {\n      throw new Error('computeHMACSignature not implemented.');\n    }\n    /**\n     * Asynchronous version of `computeHMACSignature`. Some implementations may\n     * only allow support async signature computation.\n     *\n     * Computes a SHA-256 HMAC given a secret and a payload (encoded in UTF-8).\n     * The output HMAC should be encoded in hexadecimal.\n     *\n     * Sample values for implementations:\n     * - computeHMACSignature('', 'test_secret') => 'f7f9bd47fb987337b5796fdc1fdb9ba221d0d5396814bfcaf9521f43fd8927fd'\n     * - computeHMACSignature('\\ud83d\\ude00', 'test_secret') => '837da296d05c4fe31f61d5d7ead035099d9585a5bcde87de952012a78f0b0c43\n     */\n  }, {\n    key: \"computeHMACSignatureAsync\",\n    value: function computeHMACSignatureAsync(payload, secret) {\n      throw new Error('computeHMACSignatureAsync not implemented.');\n    }\n  }]);\n  return CryptoProvider;\n}();\nexports.CryptoProvider = CryptoProvider;\n/**\n * If the crypto provider only supports asynchronous operations,\n * throw CryptoProviderOnlySupportsAsyncError instead of\n * a generic error so that the caller can choose to provide\n * a more helpful error message to direct the user to use\n * an asynchronous pathway.\n */\nvar CryptoProviderOnlySupportsAsyncError = /*#__PURE__*/function (_Error) {\n  _inherits(CryptoProviderOnlySupportsAsyncError, _Error);\n  var _super = _createSuper(CryptoProviderOnlySupportsAsyncError);\n  function CryptoProviderOnlySupportsAsyncError() {\n    _classCallCheck(this, CryptoProviderOnlySupportsAsyncError);\n    return _super.apply(this, arguments);\n  }\n  return _createClass(CryptoProviderOnlySupportsAsyncError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nexports.CryptoProviderOnlySupportsAsyncError = CryptoProviderOnlySupportsAsyncError;","map":{"version":3,"names":["_inherits","require","default","_createSuper","_wrapNativeSuper","_classCallCheck","_createClass","Object","defineProperty","exports","value","CryptoProviderOnlySupportsAsyncError","CryptoProvider","key","computeHMACSignature","payload","secret","Error","computeHMACSignatureAsync","_Error","_super","apply","arguments"],"sources":["C:/Users/Smert/OneDrive/Masaüstü/react_shop/client/node_modules/stripe/cjs/crypto/CryptoProvider.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CryptoProviderOnlySupportsAsyncError = exports.CryptoProvider = void 0;\n/**\n * Interface encapsulating the various crypto computations used by the library,\n * allowing pluggable underlying crypto implementations.\n */\nclass CryptoProvider {\n    /**\n     * Computes a SHA-256 HMAC given a secret and a payload (encoded in UTF-8).\n     * The output HMAC should be encoded in hexadecimal.\n     *\n     * Sample values for implementations:\n     * - computeHMACSignature('', 'test_secret') => 'f7f9bd47fb987337b5796fdc1fdb9ba221d0d5396814bfcaf9521f43fd8927fd'\n     * - computeHMACSignature('\\ud83d\\ude00', 'test_secret') => '837da296d05c4fe31f61d5d7ead035099d9585a5bcde87de952012a78f0b0c43\n     */\n    computeHMACSignature(payload, secret) {\n        throw new Error('computeHMACSignature not implemented.');\n    }\n    /**\n     * Asynchronous version of `computeHMACSignature`. Some implementations may\n     * only allow support async signature computation.\n     *\n     * Computes a SHA-256 HMAC given a secret and a payload (encoded in UTF-8).\n     * The output HMAC should be encoded in hexadecimal.\n     *\n     * Sample values for implementations:\n     * - computeHMACSignature('', 'test_secret') => 'f7f9bd47fb987337b5796fdc1fdb9ba221d0d5396814bfcaf9521f43fd8927fd'\n     * - computeHMACSignature('\\ud83d\\ude00', 'test_secret') => '837da296d05c4fe31f61d5d7ead035099d9585a5bcde87de952012a78f0b0c43\n     */\n    computeHMACSignatureAsync(payload, secret) {\n        throw new Error('computeHMACSignatureAsync not implemented.');\n    }\n}\nexports.CryptoProvider = CryptoProvider;\n/**\n * If the crypto provider only supports asynchronous operations,\n * throw CryptoProviderOnlySupportsAsyncError instead of\n * a generic error so that the caller can choose to provide\n * a more helpful error message to direct the user to use\n * an asynchronous pathway.\n */\nclass CryptoProviderOnlySupportsAsyncError extends Error {\n}\nexports.CryptoProviderOnlySupportsAsyncError = CryptoProviderOnlySupportsAsyncError;\n"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,SAAA,GAAAC,OAAA,6GAAAC,OAAA;AAAA,IAAAC,YAAA,GAAAF,OAAA,gHAAAC,OAAA;AAAA,IAAAE,gBAAA,GAAAH,OAAA,oHAAAC,OAAA;AAAA,IAAAG,eAAA,GAAAJ,OAAA,mHAAAC,OAAA;AAAA,IAAAI,YAAA,GAAAL,OAAA,gHAAAC,OAAA;AACbK,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,oCAAoC,GAAGF,OAAO,CAACG,cAAc,GAAG,KAAK,CAAC;AAC9E;AACA;AACA;AACA;AAHA,IAIMA,cAAc;EAAA,SAAAA,eAAA;IAAAP,eAAA,OAAAO,cAAA;EAAA;EAAAN,YAAA,CAAAM,cAAA;IAAAC,GAAA;IAAAH,KAAA;IAChB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IACI,SAAAI,qBAAqBC,OAAO,EAAEC,MAAM,EAAE;MAClC,MAAM,IAAIC,KAAK,CAAC,uCAAuC,CAAC;IAC5D;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAVI;IAAAJ,GAAA;IAAAH,KAAA,EAWA,SAAAQ,0BAA0BH,OAAO,EAAEC,MAAM,EAAE;MACvC,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;IACjE;EAAC;EAAA,OAAAL,cAAA;AAAA;AAELH,OAAO,CAACG,cAAc,GAAGA,cAAc;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AANA,IAOMD,oCAAoC,0BAAAQ,MAAA;EAAAnB,SAAA,CAAAW,oCAAA,EAAAQ,MAAA;EAAA,IAAAC,MAAA,GAAAjB,YAAA,CAAAQ,oCAAA;EAAA,SAAAA,qCAAA;IAAAN,eAAA,OAAAM,oCAAA;IAAA,OAAAS,MAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,OAAAhB,YAAA,CAAAK,oCAAA;AAAA,gBAAAP,gBAAA,CAASa,KAAK;AAExDR,OAAO,CAACE,oCAAoC,GAAGA,oCAAoC"},"metadata":{},"sourceType":"script","externalDependencies":[]}