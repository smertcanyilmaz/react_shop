{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  products: [],\n  productFav: []\n};\nexport const cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      const item = state.products.find(item => item.id === action.payload.id);\n      if (item) {\n        item.quantity += action.payload.quantity;\n      } else {\n        state.products.push(action.payload);\n      }\n    },\n    removeItem: (state, action) => {\n      state.products = state.products.filter(item => item.id !== action.payload);\n    },\n    resetCart: state => {\n      state.products = [];\n    },\n    addToFav: (state, action) => {\n      const item = state.productFav.find(item => item.id === action.payload.id);\n      if (item) {\n        item.quantity += action.payload.quantity;\n      } else {\n        state.productFav.push(action.payload);\n      }\n    }\n  }\n});\nexport const {\n  addToCart,\n  removeItem,\n  resetCart,\n  addToFav\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","products","productFav","cartSlice","name","reducers","addToCart","state","action","item","find","id","payload","quantity","push","removeItem","filter","resetCart","addToFav","actions","reducer"],"sources":["C:/Users/Smert/OneDrive/Masaüstü/react_shop/client/src/redux/cartReducer.jsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  products: [],\r\n  productFav: [],\r\n};\r\n\r\nexport const cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n  reducers: {\r\n    addToCart: (state, action) => {\r\n      const item = state.products.find((item) => item.id === action.payload.id);\r\n      if (item) {\r\n        item.quantity += action.payload.quantity;\r\n      } else {\r\n        state.products.push(action.payload);\r\n      }\r\n    },\r\n    removeItem: (state, action) => {\r\n      state.products = state.products.filter(\r\n        (item) => item.id !== action.payload\r\n      );\r\n    },\r\n\r\n    resetCart: (state) => {\r\n      state.products = [];\r\n    },\r\n    addToFav: (state, action) => {\r\n      const item = state.productFav.find(\r\n        (item) => item.id === action.payload.id\r\n      );\r\n      if (item) {\r\n        item.quantity += action.payload.quantity;\r\n      } else {\r\n        state.productFav.push(action.payload);\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addToCart, removeItem, resetCart, addToFav } = cartSlice.actions;\r\n\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,EAAE;EACZC,UAAU,EAAE;AACd,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EACnCK,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZK,QAAQ,EAAE;IACRC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5B,MAAMC,IAAI,GAAGF,KAAK,CAACN,QAAQ,CAACS,IAAI,CAAED,IAAI,IAAKA,IAAI,CAACE,EAAE,KAAKH,MAAM,CAACI,OAAO,CAACD,EAAE,CAAC;MACzE,IAAIF,IAAI,EAAE;QACRA,IAAI,CAACI,QAAQ,IAAIL,MAAM,CAACI,OAAO,CAACC,QAAQ;MAC1C,CAAC,MAAM;QACLN,KAAK,CAACN,QAAQ,CAACa,IAAI,CAACN,MAAM,CAACI,OAAO,CAAC;MACrC;IACF,CAAC;IACDG,UAAU,EAAEA,CAACR,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACN,QAAQ,GAAGM,KAAK,CAACN,QAAQ,CAACe,MAAM,CACnCP,IAAI,IAAKA,IAAI,CAACE,EAAE,KAAKH,MAAM,CAACI,OAC/B,CAAC;IACH,CAAC;IAEDK,SAAS,EAAGV,KAAK,IAAK;MACpBA,KAAK,CAACN,QAAQ,GAAG,EAAE;IACrB,CAAC;IACDiB,QAAQ,EAAEA,CAACX,KAAK,EAAEC,MAAM,KAAK;MAC3B,MAAMC,IAAI,GAAGF,KAAK,CAACL,UAAU,CAACQ,IAAI,CAC/BD,IAAI,IAAKA,IAAI,CAACE,EAAE,KAAKH,MAAM,CAACI,OAAO,CAACD,EACvC,CAAC;MACD,IAAIF,IAAI,EAAE;QACRA,IAAI,CAACI,QAAQ,IAAIL,MAAM,CAACI,OAAO,CAACC,QAAQ;MAC1C,CAAC,MAAM;QACLN,KAAK,CAACL,UAAU,CAACY,IAAI,CAACN,MAAM,CAACI,OAAO,CAAC;MACvC;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEN,SAAS;EAAES,UAAU;EAAEE,SAAS;EAAEC;AAAS,CAAC,GAAGf,SAAS,CAACgB,OAAO;AAE/E,eAAehB,SAAS,CAACiB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}