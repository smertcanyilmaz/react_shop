{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.stripeMethod = void 0;\nvar utils_js_1 = require(\"./utils.js\");\nvar autoPagination_js_1 = require(\"./autoPagination.js\");\n/**\n * Create an API method from the declared spec.\n *\n * @param [spec.method='GET'] Request Method (POST, GET, DELETE, PUT)\n * @param [spec.path=''] Path to be appended to the API BASE_PATH, joined with\n *  the instance's path (e.g. 'charges' or 'customers')\n * @param [spec.fullPath=''] Fully qualified path to the method (eg. /v1/a/b/c).\n *  If this is specified, path should not be specified.\n * @param [spec.urlParams=[]] Array of required arguments in the order that they\n *  must be passed by the consumer of the API. Subsequent optional arguments are\n *  optionally passed through a hash (Object) as the penultimate argument\n *  (preceding the also-optional callback argument\n * @param [spec.encode] Function for mutating input parameters to a method.\n *  Usefully for applying transforms to data on a per-method basis.\n * @param [spec.host] Hostname for the request.\n *\n * <!-- Public API accessible via Stripe.StripeResource.method -->\n */\nfunction stripeMethod(spec) {\n  if (spec.path !== undefined && spec.fullPath !== undefined) {\n    throw new Error(\"Method spec specified both a 'path' (\".concat(spec.path, \") and a 'fullPath' (\").concat(spec.fullPath, \").\"));\n  }\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    var callback = typeof args[args.length - 1] == 'function' && args.pop();\n    spec.urlParams = (0, utils_js_1.extractUrlParams)(spec.fullPath || this.createResourcePathWithSymbols(spec.path || ''));\n    var requestPromise = (0, utils_js_1.callbackifyPromiseWithTimeout)(this._makeRequest(args, spec, {}), callback);\n    Object.assign(requestPromise, (0, autoPagination_js_1.makeAutoPaginationMethods)(this, args, spec, requestPromise));\n    return requestPromise;\n  };\n}\nexports.stripeMethod = stripeMethod;","map":{"version":3,"names":["Object","defineProperty","exports","value","stripeMethod","utils_js_1","require","autoPagination_js_1","spec","path","undefined","fullPath","Error","concat","_len","arguments","length","args","Array","_key","callback","pop","urlParams","extractUrlParams","createResourcePathWithSymbols","requestPromise","callbackifyPromiseWithTimeout","_makeRequest","assign","makeAutoPaginationMethods"],"sources":["C:/Users/Smert/OneDrive/Masaüstü/react_shop/client/node_modules/stripe/cjs/StripeMethod.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stripeMethod = void 0;\nconst utils_js_1 = require(\"./utils.js\");\nconst autoPagination_js_1 = require(\"./autoPagination.js\");\n/**\n * Create an API method from the declared spec.\n *\n * @param [spec.method='GET'] Request Method (POST, GET, DELETE, PUT)\n * @param [spec.path=''] Path to be appended to the API BASE_PATH, joined with\n *  the instance's path (e.g. 'charges' or 'customers')\n * @param [spec.fullPath=''] Fully qualified path to the method (eg. /v1/a/b/c).\n *  If this is specified, path should not be specified.\n * @param [spec.urlParams=[]] Array of required arguments in the order that they\n *  must be passed by the consumer of the API. Subsequent optional arguments are\n *  optionally passed through a hash (Object) as the penultimate argument\n *  (preceding the also-optional callback argument\n * @param [spec.encode] Function for mutating input parameters to a method.\n *  Usefully for applying transforms to data on a per-method basis.\n * @param [spec.host] Hostname for the request.\n *\n * <!-- Public API accessible via Stripe.StripeResource.method -->\n */\nfunction stripeMethod(spec) {\n    if (spec.path !== undefined && spec.fullPath !== undefined) {\n        throw new Error(`Method spec specified both a 'path' (${spec.path}) and a 'fullPath' (${spec.fullPath}).`);\n    }\n    return function (...args) {\n        const callback = typeof args[args.length - 1] == 'function' && args.pop();\n        spec.urlParams = (0, utils_js_1.extractUrlParams)(spec.fullPath || this.createResourcePathWithSymbols(spec.path || ''));\n        const requestPromise = (0, utils_js_1.callbackifyPromiseWithTimeout)(this._makeRequest(args, spec, {}), callback);\n        Object.assign(requestPromise, (0, autoPagination_js_1.makeAutoPaginationMethods)(this, args, spec, requestPromise));\n        return requestPromise;\n    };\n}\nexports.stripeMethod = stripeMethod;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,YAAY,GAAG,KAAK,CAAC;AAC7B,IAAMC,UAAU,GAAGC,OAAO,CAAC,YAAY,CAAC;AACxC,IAAMC,mBAAmB,GAAGD,OAAO,CAAC,qBAAqB,CAAC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,YAAYA,CAACI,IAAI,EAAE;EACxB,IAAIA,IAAI,CAACC,IAAI,KAAKC,SAAS,IAAIF,IAAI,CAACG,QAAQ,KAAKD,SAAS,EAAE;IACxD,MAAM,IAAIE,KAAK,yCAAAC,MAAA,CAAyCL,IAAI,CAACC,IAAI,0BAAAI,MAAA,CAAuBL,IAAI,CAACG,QAAQ,OAAI,CAAC;EAC9G;EACA,OAAO,YAAmB;IAAA,SAAAG,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAANC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAJF,IAAI,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;IAAA;IACpB,IAAMC,QAAQ,GAAG,OAAOH,IAAI,CAACA,IAAI,CAACD,MAAM,GAAG,CAAC,CAAC,IAAI,UAAU,IAAIC,IAAI,CAACI,GAAG,CAAC,CAAC;IACzEb,IAAI,CAACc,SAAS,GAAG,CAAC,CAAC,EAAEjB,UAAU,CAACkB,gBAAgB,EAAEf,IAAI,CAACG,QAAQ,IAAI,IAAI,CAACa,6BAA6B,CAAChB,IAAI,CAACC,IAAI,IAAI,EAAE,CAAC,CAAC;IACvH,IAAMgB,cAAc,GAAG,CAAC,CAAC,EAAEpB,UAAU,CAACqB,6BAA6B,EAAE,IAAI,CAACC,YAAY,CAACV,IAAI,EAAET,IAAI,EAAE,CAAC,CAAC,CAAC,EAAEY,QAAQ,CAAC;IACjHpB,MAAM,CAAC4B,MAAM,CAACH,cAAc,EAAE,CAAC,CAAC,EAAElB,mBAAmB,CAACsB,yBAAyB,EAAE,IAAI,EAAEZ,IAAI,EAAET,IAAI,EAAEiB,cAAc,CAAC,CAAC;IACnH,OAAOA,cAAc;EACzB,CAAC;AACL;AACAvB,OAAO,CAACE,YAAY,GAAGA,YAAY"},"metadata":{},"sourceType":"script","externalDependencies":[]}