{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Smert\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\react_shop\\\\client\\\\src\\\\pages\\\\Products\\\\FilterSide.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FilterPrice = ({\n  data,\n  setSort,\n  setMaxPrice\n}) => {\n  _s();\n  const radios = [{\n    id: 1,\n    name: \"$0 - $100\"\n  }, {\n    id: 2,\n    name: \"$100 - $500\"\n  }, {\n    id: 3,\n    name: \"$500 - $1000\"\n  }];\n  const [filteredData, setFilteredData] = useState(data); // Filtrelenmiş verileri saklamak için bir state tanımlayın\n\n  const handler = event => {\n    const targetId = parseInt(event.target.id);\n    switch (targetId) {\n      case 1:\n        setMaxPrice(100);\n        break;\n      case 2:\n        setMaxPrice(500);\n        break;\n      case 3:\n        setMaxPrice(1000);\n        break;\n      default:\n        break;\n    }\n\n    // Verileri filtrelemek için bir işlev kullanın\n    const filtered = data.filter(item => {\n      if (targetId === 1) {\n        return item.attributes.price <= 100;\n      } else if (targetId === 2) {\n        return item.attributes.price > 100 && item.attributes.price <= 500;\n      } else if (targetId === 3) {\n        return item.attributes.price > 500 && item.attributes.price <= 1000;\n      }\n    });\n\n    // Filtrelenmiş verileri güncelleyin\n    setFilteredData(filtered);\n\n    // Sıralamayı sıfırlayın veya uygun bir sıralama yapabilirsiniz.\n    setSort(\"\"); // veya setSort(\"ascending\") gibi\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col gap-1 text-sm\",\n    children: [radios === null || radios === void 0 ? void 0 : radios.map(radio => /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: radio.id,\n      className: \"flex gap-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"price\",\n        id: radio.id.toString(),\n        onChange: handler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), radio.name]\n    }, radio.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredData.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.name, \" - $\", item.attributes.price]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(FilterPrice, \"/v6S5Wua5t2Odh+jUxG0MnJHH+4=\");\n_c = FilterPrice;\nexport default FilterPrice;\nvar _c;\n$RefreshReg$(_c, \"FilterPrice\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FilterPrice","data","setSort","setMaxPrice","_s","radios","id","name","filteredData","setFilteredData","handler","event","targetId","parseInt","target","filtered","filter","item","attributes","price","className","children","map","radio","htmlFor","type","toString","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Smert/OneDrive/Masaüstü/react_shop/client/src/pages/Products/FilterSide.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst FilterPrice = ({ data, setSort, setMaxPrice }) => {\r\n  const radios = [\r\n    {\r\n      id: 1,\r\n      name: \"$0 - $100\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"$100 - $500\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"$500 - $1000\",\r\n    },\r\n  ];\r\n\r\n  const [filteredData, setFilteredData] = useState(data); // Filtrelenmiş verileri saklamak için bir state tanımlayın\r\n\r\n  const handler = (event) => {\r\n    const targetId = parseInt(event.target.id);\r\n\r\n    switch (targetId) {\r\n      case 1:\r\n        setMaxPrice(100);\r\n        break;\r\n      case 2:\r\n        setMaxPrice(500);\r\n        break;\r\n      case 3:\r\n        setMaxPrice(1000);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    // Verileri filtrelemek için bir işlev kullanın\r\n    const filtered = data.filter((item) => {\r\n      if (targetId === 1) {\r\n        return item.attributes.price <= 100;\r\n      } else if (targetId === 2) {\r\n        return item.attributes.price > 100 && item.attributes.price <= 500;\r\n      } else if (targetId === 3) {\r\n        return item.attributes.price > 500 && item.attributes.price <= 1000;\r\n      }\r\n    });\r\n\r\n    // Filtrelenmiş verileri güncelleyin\r\n    setFilteredData(filtered);\r\n\r\n    // Sıralamayı sıfırlayın veya uygun bir sıralama yapabilirsiniz.\r\n    setSort(\"\"); // veya setSort(\"ascending\") gibi\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col gap-1 text-sm\">\r\n      {radios?.map((radio) => (\r\n        <label htmlFor={radio.id} key={radio.id} className=\"flex gap-1\">\r\n          <input\r\n            type=\"radio\"\r\n            name=\"price\"\r\n            id={radio.id.toString()}\r\n            onChange={handler}\r\n          />\r\n          {radio.name}\r\n        </label>\r\n      ))}\r\n      <ul>\r\n        {filteredData.map((item) => (\r\n          <li key={item.id}>\r\n            {item.name} - ${item.attributes.price}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterPrice;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}